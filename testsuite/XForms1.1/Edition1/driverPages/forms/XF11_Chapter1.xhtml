<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xforms="http://www.w3.org/2002/xforms"
    xmlns:ts="http://www.w3c.org/MarkUp/Forms/XForms/Test/11" ts:dummy="dummy">
  <head>
    <title>XForms Test Suite</title>
   
    <xforms:model id="chapterModel" >
    	<xforms:instance id="instance_chapterModel">
			<testSuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3c.org/MarkUp/Forms/XForms/Test/11 XF11TestSuite.xsd" specVersion="1.1" xmlns="http://www.w3c.org/MarkUp/Forms/XForms/Test/11"/>
		</xforms:instance>
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase/ts:testCaseDate" type="xsd:date" />
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly" type="xsd:boolean"/>
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly" type="xsd:boolean"/>
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase/ts:testCaseBasic" type="xsd:boolean" />
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase/ts:testCaseNormative" type="xsd:boolean" />	
			  
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormTotal" calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'])" />
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormPass" calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseStatus = 'Passed'])" />
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormFail" calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseStatus = 'Failed'])" />

		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicTotal" calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseBasic = 'true'])" />
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicPass" calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseBasic = 'true'][ts:testCaseStatus = 'Passed'])" />
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicFail" calculate="count(/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseBasic = 'true'][ts:testCaseStatus = 'Failed'])" />


<!-- bindings for test execution profile settings -->

		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'false']" 
		             relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>
		             
	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'false']" 
	                 relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'false']" 
	                 relevant="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false' and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/> 
	                 
	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'false']" 
	                 relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and (/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'false']" 
		             relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>
		             
	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'false']" 
	                 relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>

	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'false']" 
	                 relevant="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false' and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/> 
	                 
	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'false']" 
	                 relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and (/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.1')"/>
	              	                 
		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'true']" 
		             relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0')"/>
		             
	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'true']" 
	                 relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0')"/>

	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'true']" 
	                 relevant="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false' and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0')"/> 
	                 
	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'false'][ts:testCaseApplicability/ts:XForms1.1 = 'true']" 
	                 relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and (/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false') and not(/ts:testSuite/ts:specChapter/ts:profile/ts:specification = 'XForms 1.0')"/>

		<xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'true']" 
		             relevant="true()"/>
		             
	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'true'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'true']" 
	                 relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true')"/>

	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'true'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'true']" 
	                 relevant="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false'"/> 
	                 
	    <xforms:bind nodeset="/ts:testSuite/ts:specChapter/ts:testCase[ts:testCaseNormative = 'false'][ts:testCaseBasic = 'false'][ts:testCaseApplicability/ts:XForms1.0 = 'true'][ts:testCaseApplicability/ts:XForms1.1 = 'true']" 
	                 relevant="not(/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly = 'true') and (/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly = 'false')"/>

      	<xforms:submission id="submit_chapterModel" action="../Results/XF11_01_Results.xml" method="put"/>  
      	<xforms:submission id="load_chapterModel" action="../Results/XF11_01_Results.xml" method="get" replace="instance" serialization="none">  
			<xforms:send submission="clear_chapterModel" ev:event="xforms-submit-done-error"/>
			<xforms:rebuild ev:event="xforms-submit-done"/>
		</xforms:submission>
      	<xforms:submission id="clear_chapterModel" action="../xml/XF11TestSuiteChpt1.xml" method="get" replace="instance" serialization="none">
			<xforms:rebuild ev:event="xforms-submit-done"/>
		</xforms:submission>
		<xforms:send submission="load_chapterModel" ev:event="xforms-ready"/>
    </xforms:model>
    
    <link href="TestSuite11.css" rel="stylesheet"/>
  </head>
  <body>
    <h1>XForms Test Suite</h1>

	<xforms:output ref="ts:specChapter/@chapterName" class="docTitle"><xforms:label/></xforms:output>
	<xforms:output ref="ts:specChapter/@chapterTitle" class="docTitle"><xforms:label/></xforms:output>
    <p>
	  <xforms:input ref="/ts:testSuite/ts:specChapter/@productId" class="testCaseSummaryTitle">
	    <xforms:label>Product/Build Note: </xforms:label>
	  </xforms:input>
	</p>
	
	<h3>Targets</h3>
	
    <table>
	  <tr>
	    <td>
	       <xforms:input ref="/ts:testSuite/ts:specChapter/ts:profile/ts:basicOnly" appearance="compact">
	          <xforms:label>Basic Only?</xforms:label>
	       </xforms:input>
	    </td>
	  </tr>
	  <tr>
	    <td>
	       <xforms:input ref="/ts:testSuite/ts:specChapter/ts:profile/ts:normativeOnly" appearance="compact">
	          <xforms:label>Normative Only?</xforms:label>
	       </xforms:input>
	    </td>
	  </tr>	
	</table>
	
	<h3>Results</h3>
	
	<table>
	  <tr>
	    <td class="testCaseSummaryTitle">Normative:</td>
	    <td>Passed</td><td><xforms:output model="chapterModel" ref="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormPass"/></td>
	    <td>Failed</td><td><xforms:output model="chapterModel" ref="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormFail"/></td>
	    <td>Total</td><td><xforms:output model="chapterModel" ref="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numNormTotal"/></td>
	  </tr>
	  <tr>
	    <td class="testCaseSummaryTitle">Basic:</td>
	    <td>Passed</td><td><xforms:output model="chapterModel" ref="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicPass"/></td>
	    <td>Failed</td><td><xforms:output model="chapterModel" ref="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicFail"/></td>
	    <td>Total</td><td><xforms:output model="chapterModel" ref="/ts:testSuite/ts:specChapter/ts:statusSummary/ts:numBasicTotal"/></td>
	  </tr>
	</table>
	
    <h3>Test Cases</h3>
	
	<table id="testsuiteTable">
		<thead>
			<tr>
				<th class="testCaseNameTitle">Test Case</th>
				<th class="testCaseDescriptionTitle">Description</th>
				<th class="testCaseSpecLinkTitle">Spec Link</th>
				<th class="testCaseBasicTitle">Normative for XForms Basic</th>
				<th class="testCaseBasicTitle">Normative for XForms Full</th>
				<th class="testCaseStatusTitle">Status</th>			
				<th class="testCaseDateTitle">Date</th>
				<th class="testCaseNoteTitle">Note</th>						
			</tr>
		</thead>

		<tbody>
			<xforms:repeat nodeset="/ts:testSuite/ts:specChapter/ts:testCase">	<!-- testCase -->
				<tr>

					<td>
						<xforms:trigger appearance="minimal" class="testCaseName" ref=".">  	
							<xforms:label ref="ts:testCaseName" class="theLink"></xforms:label>
							<xforms:hint>Click here to execute the test case.</xforms:hint>  
							<xforms:load ref="ts:testCaseLink" target="_blank" ev:event="DOMActivate" model="chapterModel"/>
						</xforms:trigger>
					</td>
				
					<td>
						<xforms:output ref="ts:testCaseDescription" model="chapterModel" class="testCaseDescription">     	
							<xforms:label></xforms:label>
							<!--  <xforms:hint>Short Description of the test case.</xforms:hint> -->
						</xforms:output>
						<xforms:output appearance="minimal" ref="ts:testCaseApplicability/ts:XForms1.0" model="chapterModel" class="testCaseBasic">     	
							<xforms:label></xforms:label>
						</xforms:output>
						<xforms:output appearance="minimal" ref="ts:testCaseApplicability/ts:XForms1.1" model="chapterModel" class="testCaseBasic">     	
							<xforms:label></xforms:label>
						</xforms:output>
					</td>
				
					<td>
						<xforms:trigger appearance="minimal" class="testCaseSpecLink" ref=".">    	
							<xforms:label ref="ts:testCaseSpecLinkName" class="theLink"></xforms:label>
							<xforms:hint>Click here to see the Recommendation text for the test case.</xforms:hint>  
							<xforms:load ref="ts:testCaseSpecLink" target="_blank" ev:event="DOMActivate" model="chapterModel"/>
						</xforms:trigger>
					</td>
					
					<td>
						<xforms:output appearance="minimal" ref="ts:testCaseBasic" model="chapterModel" class="testCaseBasic">     	
							<xforms:label></xforms:label>
						</xforms:output>
					</td>

					<td>
						<xforms:output appearance="minimal" ref="ts:testCaseNormative" model="chapterModel" class="testCaseNormative">
							<xforms:label></xforms:label>
						</xforms:output>
					</td>
				
					<td>
						<xforms:select1 ref="ts:testCaseStatus" model="chapterModel" class="testCaseStatus">     	
							<xforms:label></xforms:label>
							<xforms:item>
								<xforms:label>Passed</xforms:label>
								<xforms:value>Passed</xforms:value>
							</xforms:item>
							<xforms:item>
								<xforms:label>Failed</xforms:label>
								<xforms:value>Failed</xforms:value>
							</xforms:item>
							<xforms:item>
								<xforms:label>Unknown</xforms:label>
								<xforms:value>Unknown</xforms:value>
								</xforms:item>
							<xforms:hint>Select test case status of Passed, Failed, or Unknown.</xforms:hint> 
						</xforms:select1>
					</td>
				
					<td>
						<xforms:input ref="ts:testCaseDate" model="chapterModel" class="testCaseDate">     	
							<xforms:label></xforms:label>
							<xforms:hint>Date the current status was established.</xforms:hint> 
						</xforms:input>
					</td>

					<td>
						<xforms:input ref="ts:testCaseNote" model="chapterModel" class="testCaseNote">
							<xforms:label></xforms:label>
						</xforms:input>    	    
					</td>

				</tr>
			</xforms:repeat>  <!-- testCase -->
		</tbody>
	</table>

  <xforms:group>
    <xforms:label/>
    <xforms:submit submission="submit_chapterModel">
    	<xforms:label>Save</xforms:label>
    </xforms:submit>
    <xforms:submit submission="load_chapterModel">
    	<xforms:label>Load</xforms:label>
    </xforms:submit>
    <xforms:submit submission="clear_chapterModel">
  	  <xforms:label>Clear</xforms:label>
    </xforms:submit>
  </xforms:group>
     
  </body>
</html>
