<?xml version="1.0" encoding="ISO-8859-1"?>
<txs:scriptsheet xmlns:txs="http://www.agencexml.com/txs" xmlns:req="http://www.agencexml.com/requests" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:cm="http://www.agencexml.com/cm" version="0.4">
	<xsl:stylesheet version="1.0" txs:name="main" xmlns:req="http://www.agencexml.com/requests">
		<xsl:template match="/">
			<txs:return contenttype="application/xhtml+xml" format="xhtml">
				<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
					<head>
						<title>XSLTForms build</title>
						<meta http-equiv="content-type" content="text/html; charset=utf-8" />
					</head>
					<body>
						<txs:transform stylesheet="#build">
							<txs:with-param name="filename" value="{/req:params/req:file}"/>
							<txs:input>
								<txs:load filename="{/req:params/req:file}.xml" format="xml"/>
							</txs:input>
						</txs:transform>
					</body>
				</html>
			</txs:return>
		</xsl:template>
	</xsl:stylesheet>
	<xsl:stylesheet txs:name="build" version="1.0" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:cm="http://www.agencexml.com/cm" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:txs="http://www.agencexml.com/txs" xmlns:req="http://www.agencexml.com/requests">
		<xsl:param name="filename"/>
		<xsl:template match="/">
			<p>
				<xsl:variable name="loc">
						<xsl:call-template name="locationextract">
							<xsl:with-param name="path" select="$filename"/>
						</xsl:call-template>
				</xsl:variable>
				<xsl:choose>
					<xsl:when test="string(/cm:component/cm:source/@type)=''">
						<xsl:value-of select="substring-after($filename,'../')"/> not found
					</xsl:when>
					<xsl:otherwise>
						<xsl:variable name="format">
							<xsl:choose>
								<xsl:when test="/cm:component/cm:source/@type = 'application/xml'">xml</xsl:when>
								<xsl:otherwise>text</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<txs:save filename="{concat(substring-before($filename,'/src/'),'/build/',substring-after($filename,$loc))}" format="{$format}">
							<xsl:choose>
								<xsl:when test="contains($filename,'.xsl') and substring-after($filename,'.xsl') = ''">
									<xsl:variable name="label">
										<xsl:choose>
											<xsl:when test="document('cm_config.xml')/cm:config/cm:version != document('cm_config.xml')/cm:config/cm:versionNumber"><xsl:value-of select="document('cm_config.xml')/cm:config/cm:version"/></xsl:when>
											<xsl:otherwise>Rev. <xsl:value-of select="document('cm_config.xml')/cm:config/cm:versionNumber"/></xsl:otherwise>
										</xsl:choose>
									</xsl:variable>
									<txs:comment><xsl:value-of select="concat(' ',$label)"/><xsl:value-of select="/cm:component/cm:licence"/></txs:comment>
									<txs:stylesheet version="1.0" exclude-result-prefixes="xhtml xforms ev exslt msxsl" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ajx="http://www.ajaxforms.net/2006/ajx" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:exslt="http://exslt.org/common">
									<!--
										<txs:include xmlns:xsl="http://www.w3.org/1999/XSL/Transform" href="config.xsl"/>
									-->
										<xsl:copy-of select="/cm:component/rdf:RDF"/>
										<txs:output method="html" encoding="utf-8" omit-xml-declaration="yes" indent="no" doctype-public="-//W3C//DTD HTML 4.01 Transitional//EN" doctype-system="http://www.w3.org/TR/html4/loose.dtd"/>
										<xsl:apply-templates select="/cm:component/cm:source/node()">
											<xsl:with-param name="loc">
												<xsl:call-template name="locationextract">
													<xsl:with-param name="path" select="$filename"/>
												</xsl:call-template>
											</xsl:with-param>
										</xsl:apply-templates>
									</txs:stylesheet>
								</xsl:when>
								<xsl:otherwise>
									<xsl:text>/* </xsl:text>
									<xsl:choose>
										<xsl:when test="document('cm_config.xml')/cm:config/cm:version != document('cm_config.xml')/cm:config/cm:versionNumber"><xsl:value-of select="document('cm_config.xml')/cm:config/cm:version"/></xsl:when>
										<xsl:otherwise>Rev. <xsl:value-of select="document('cm_config.xml')/cm:config/cm:versionNumber"/></xsl:otherwise>
									</xsl:choose>
									<xsl:text>
</xsl:text><xsl:value-of select="document('cm_config.xml')/cm:config/cm:licence"/><xsl:text>
*/</xsl:text>
									<xsl:apply-templates select="/cm:component/cm:source/node()">
										<xsl:with-param name="loc">
											<xsl:call-template name="locationextract">
												<xsl:with-param name="path" select="$filename"/>
											</xsl:call-template>
										</xsl:with-param>
									</xsl:apply-templates>
								</xsl:otherwise>
							</xsl:choose>
						</txs:save>
						<xsl:value-of select="substring-after($filename,'../')"/> built
					</xsl:otherwise>
				</xsl:choose>
			</p>
		</xsl:template>
		<xsl:template match="cm:import-components" priority="2">
			<xsl:param name="loc"/>
			<xsl:apply-templates select="document(concat($loc,@path))/cm:component/cm:source/node()">
				<xsl:with-param name="loc">
					<xsl:call-template name="locationextract">
						<xsl:with-param name="path" select="concat($loc,@path)"/>
					</xsl:call-template>
				</xsl:with-param>
			</xsl:apply-templates>
		</xsl:template>
		<xsl:template match="cm:value" priority="2"><xsl:value-of select="document('cm_config.xml')/cm:config/cm:*[local-name()=current()/@name]"/></xsl:template>
		<xsl:template match="cm:*" priority="1"/>
		<xsl:template match="@* | node()" priority="0">
			<xsl:param name="loc"/>
			<xsl:copy>
				<xsl:apply-templates select="@* | node()">
					<xsl:with-param name="loc" select="$loc"/>
				</xsl:apply-templates>
			</xsl:copy>
		</xsl:template>
		<xsl:template name="locationextract">
			<xsl:param name="path"/>
			<xsl:if test="contains($path,'/')"><xsl:value-of select="substring-before($path,'/')"/>/<xsl:call-template name="locationextract"><xsl:with-param name="path" select="substring-after($path,'/')"/></xsl:call-template></xsl:if>
		</xsl:template>
	</xsl:stylesheet>
</txs:scriptsheet>