<cm:component xmlns:cm="http://www.agencexml.com/cm" name="XFLoad.js">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-07</cm:creationdate>
	<cm:lastupdate>2009-04-07</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 &lt;agenceXML&gt; - Alain COUTHURES
Contact at : &lt;info@agencexml.com&gt;

Copyright (C) 2006 AJAXForms S.L.
Contact at: &lt;info@ajaxforms.com&gt;

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="text/javascript">
		<cm:wiki>
=== "XsltForms_unload" class ===
Unload Action Class
* constructor function : stores specific properties</cm:wiki>
		<![CDATA[
function XsltForms_unload(subform, targetid, ifexpr, whileexpr, iterateexpr) {
	this.subform = subform;
	this.targetid = targetid;
	this.init(ifexpr, whileexpr, iterateexpr);
}

XsltForms_unload.prototype = new XsltForms_abstractAction();

]]>
		<cm:wiki>
* '''run''' method : unload the targeted subform</cm:wiki>
<![CDATA[
XsltForms_unload.prototype.run = function(element, ctx) {
	var targetid = this.targetid || this.subform.eltid;
	var targetelt = XsltForms_idManager.find(targetid);
	if (targetelt.xfSubform) {
		targetelt.xfSubform.dispose();
	}
	targetelt.xfSubform = null;
	var targetxf = targetelt.xfElement;
	if (targetxf) {
		targetelt = targetelt.children[targetelt.children.length - 1];
	}
	targetelt.innerHTML = "";
	/*
	var node = targetelt.firstChild;
	alert("avant " + (node.remove? "remove" : "removeChild"));
	while (node = targetelt.firstChild) {
		if (node.remove) {
			node.remove();
		} else {
			targetelt.removeChild(node);
		}
		node = null;
	}
	alert("aprÃ¨s");
	*/
	targetelt.hasXFElement = null;
	XsltForms_browser.setClass(targetelt, "xforms-subform-loaded", false);
	if (targetxf) {
		XsltForms_xmlevents.dispatch(targetxf, "xforms-unload-done");
	}
	XsltForms_browser.debugConsole.write("unload-done");
};
]]>
		<cm:wiki>
* '''subform''' method : unloads a subform directly from Javascript instruction</cm:wiki>
<![CDATA[
XsltForms_unload.subform = function(targetid, ref) {
	if (ref) {
		var parent = ref;
		while (parent && parent.nodeType === Fleur.Node.ELEMENT_NODE) {
			if (XsltForms_browser.hasClass(parent, "xforms-repeat-item")) {
				XsltForms_repeat.selectItem(parent);
			}
			parent = parent.parentNode;
		}
	}
	var targetelt = XsltForms_idManager.find(targetid);
	var subform = null;
	parent = targetelt;
	while (parent && parent.nodeType === Fleur.Node.ELEMENT_NODE) {
		if (parent.xfSubform) {
			subform = parent.xfSubform;
			break;
		}
		parent = parent.parentNode;
	}
	var a = new XsltForms_unload(subform, targetid);
	a.run();
};
]]>
	</cm:source>
</cm:component>