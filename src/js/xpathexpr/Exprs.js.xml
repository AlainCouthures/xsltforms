<cm:component xmlns:cm="http://www.agencexml.com/cm" name="Exprs.js">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-07</cm:creationdate>
	<cm:lastupdate>2009-04-07</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 &lt;agenceXML&gt; - Alain COUTHURES
Contact at : &lt;info@agencexml.com&gt;

Copyright (C) 2006 AJAXForms S.L.
Contact at: &lt;info@ajaxforms.com&gt;

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="text/javascript">
		<cm:wiki>
=== TokenExpr Class ===
XPath Expression Class for token expressions
* constructor function : initializes the value property</cm:wiki>
		<![CDATA[
function XsltForms_tokenExpr(m) {
	this.value = m;
}

]]>
		<cm:wiki>
* '''evaluate''' method : evaluates this Binary expression object value as a string value.</cm:wiki>
<![CDATA[
XsltForms_tokenExpr.prototype.evaluate = function() {
	return XsltForms_globals.stringValue(this.value);
};

]]>
		<cm:wiki>
=== UnaryMinusExpr Class ===
XPath Expression Class for unary minus expressions
* constructor function : initializes the expr property</cm:wiki>
<![CDATA[
function XsltForms_unaryMinusExpr(expr) {
	this.expr = expr;
}

]]>
		<cm:wiki>
* '''evaluate''' method : evaluates this Unary Minus expression object.</cm:wiki>
<![CDATA[
XsltForms_unaryMinusExpr.prototype.evaluate = function(ctx) {
	return -XsltForms_globals.numberValue(this.expr.evaluate(ctx));
};

]]>
		<cm:wiki>
=== CteExpr Class ===
XPath Expression Class for constant expressions
* constructor function : initializes the value property</cm:wiki>
<![CDATA[
function XsltForms_cteExpr(value) {
	this.value = XsltForms_browser.isEscaped ? typeof value === "string" ? XsltForms_browser.unescape(value) : value : value;
}

]]>
		<cm:wiki>
* '''evaluate''' method : gets this Constant expression object value as is.</cm:wiki>
<![CDATA[
XsltForms_cteExpr.prototype.evaluate = function() {
	return this.value;
};
]]>
	</cm:source>
</cm:component>