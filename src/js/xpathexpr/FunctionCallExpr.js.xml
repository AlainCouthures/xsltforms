<cm:component xmlns:cm="http://www.agencexml.com/cm" name="FunctionCallExpr.js">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-07</cm:creationdate>
	<cm:lastupdate>2009-04-07</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 &lt;agenceXML&gt; - Alain COUTHURES
Contact at : &lt;info@agencexml.com&gt;

Copyright (C) 2006 AJAXForms S.L.
Contact at: &lt;info@ajaxforms.com&gt;

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="text/javascript">
		<cm:wiki>
=== XsltForms_functionCallExpr Class ===
XPath Expression Class for core function calling
* constructor function : checks a core function has the given name, initializes specific properties, pushes arguments</cm:wiki>
		<![CDATA[
function XsltForms_functionCallExpr(name) {
	this.name = name;
	this.func = XsltForms_xpathCoreFunctions[name];
	this.xpathfunc = !!this.func;
	this.args = [];
	if (!this.xpathfunc) {
		try {
			this.func = eval(name.split(" ")[1]);
		} catch (e) {
		 alert(e);
		}
	}
	if (!this.func) {
		XsltForms_globals.error(this, "xforms-compute-exception", "Function " + this.name + "() not found");
	}
	for (var i = 1, len = arguments.length; i < len; i++) {
		this.args.push(arguments[i]);
	}
}

]]>
		<cm:wiki>
* '''evaluate''' method : evaluates this function call expression object calling the corresponding Javascript function with the context and the same arguments</cm:wiki>
<![CDATA[
XsltForms_functionCallExpr.prototype.evaluate = function(ctx) {
	var arguments_ = [];
	if (this.xpathfunc) {
		for (var i = 0, len = this.args.length; i < len; i++) {
			arguments_[i] = this.args[i].evaluate(ctx);
		}
		return this.func.call(ctx, arguments_);
	} else {
		for (var i2 = 0, len2 = this.args.length; i2 < len2; i2++) {
			arguments_[i2] = XsltForms_globals.stringValue(this.args[i2].evaluate(ctx));
		}
		return this.func.apply(null,arguments_);
	}
};
]]>
	</cm:source>
</cm:component>