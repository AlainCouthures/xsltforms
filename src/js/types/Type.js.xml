<cm:component xmlns:cm="http://www.agencexml.com/cm" name="Type.js">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-07</cm:creationdate>
	<cm:lastupdate>2009-04-07</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 &lt;agenceXML&gt; - Alain COUTHURES
Contact at : &lt;info@agencexml.com&gt;

Copyright (C) 2006 AJAXForms S.L.
Contact at: &lt;info@ajaxforms.com&gt;

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="text/javascript">
		<cm:wiki>
=== "XsltForms_type" class ===
Type Abstract Class
* constructor function : empty</cm:wiki>
		<![CDATA[
function XsltForms_type() {
}

]]>
		<cm:wiki>
* '''setSchema''' method : associates a schema to this Type object</cm:wiki>
<![CDATA[
XsltForms_type.prototype.setSchema = function(schema) {
	this.schema = schema;
	return this;
};

]]>
		<cm:wiki>
* '''setName''' method : associates a name to this Type object and updates the schema accordingly</cm:wiki>
<![CDATA[
XsltForms_type.prototype.setName = function(name) {
	this.name = name;
	this.nsuri = this.schema.ns;
	this.schema.types[name] = this;
	return this;
};

]]>
		<cm:wiki>
* '''canonicalValue''' method : computes the canonical value according to white space management (replace, collapse)</cm:wiki>
<![CDATA[
XsltForms_type.prototype.canonicalValue = function(value) {
	value = value.toString();
	switch (this.whiteSpace) {
		case "replace":
			value = value.replace(/[\t\r\n]/g, " ");
			break;
		case "collapse":
			value = value.replace(/[\t\r\n ]+/g, " ").replace(/^\s+|\s+$/g, "");
			break;
	}

	return value;
};

]]>
		<cm:wiki>
* '''getMaxLength''' method : get the max length for this Type object or null</cm:wiki>
<![CDATA[
XsltForms_type.prototype.getMaxLength = function() {
	return this.maxLength ? this.maxLength : (this.length ? this.length : (this.totalDigits ? this.totalDigits + 1 : null));
};

]]>
		<cm:wiki>
* '''getDisplayLength''' method : get the display length for this Type object</cm:wiki>
<![CDATA[
XsltForms_type.prototype.getDisplayLength = function() {
	return this.displayLength;
};
    ]]>
	</cm:source>
</cm:component>