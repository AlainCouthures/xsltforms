<cm:component xmlns:cm="http://www.agencexml.com/cm" name="listeners.xsl">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-08</cm:creationdate>
	<cm:lastupdate>2009-04-08</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 agenceXML - Alain COUTHURES
Contact at : info@agencexml.com

Copyright (C) 2006 AJAXForms S.L.
Contact at: info@ajaxforms.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="application/xml">
		<xsl:template name="listeners" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events">
			<xsl:param name="current"/>
			<xsl:param name="workid"/>
			<xsl:variable name="lname" select="local-name()"/>
			<xsl:variable name="rid">
				<xsl:choose>
					<xsl:when test="@id">"<xsl:value-of select="@id"/></xsl:when>
					<xsl:when test="$lname = 'model' and not(preceding-sibling::xforms:model)">"xsltforms-mainform-model-default</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$jsid_pf"/>
						<xsl:value-of select="$lname"/>
						<xsl:text>-</xsl:text>
						<xsl:value-of select="$workid"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:for-each select="node()">
				<xsl:if test="namespace-uri() = 'http://www.w3.org/2002/xforms' and contains(':setvalue:insert:load:delete:action:toggle:send:setfocus:setnode:dispatch:message:show:hide:script:unload:',concat(':',local-name(),':'))">
					<js xmlns="">
						<xsl:text>new XsltForms_listener(</xsl:text>
						<xsl:value-of select="$vn_subform"/>
						<xsl:text>,document.getElementById(</xsl:text>
						<xsl:choose>
							<xsl:when test="@ev:observer">"<xsl:value-of select="@ev:observer"/></xsl:when>
							<xsl:otherwise><xsl:value-of select="$rid"/></xsl:otherwise>
						</xsl:choose>
						<xsl:text>"),</xsl:text>
						<xsl:choose>
							<xsl:when test="@ev:target">
								<xsl:text>document.getElementById("</xsl:text>
								<xsl:value-of select="@ev:target"/>
								<xsl:text>"),</xsl:text>
							</xsl:when>
							<xsl:otherwise><xsl:text>null,</xsl:text></xsl:otherwise>
						</xsl:choose>
						<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@ev:event | @ev:actiontype"/></xsl:call-template>
						<xsl:text>,</xsl:text>
						<xsl:choose>
							<xsl:when test="@ev:phase">"<xsl:value-of select="@ev:phase"/>"</xsl:when>
							<xsl:otherwise>null</xsl:otherwise>
						</xsl:choose>
						<xsl:text>,function(evt) {XsltForms_browser.run(</xsl:text>
						<xsl:value-of select="$vn_pf"/>
						<xsl:variable name="lname2" select="local-name()"/>
						<xsl:variable name="nsuri" select="namespace-uri()"/>
						<xsl:value-of select="$lname2"/>
						<xsl:text>_</xsl:text>
						<xsl:value-of select="concat(position(),'_',$workid)"/>
						<xsl:text>,XsltForms_browser.getId(evt.currentTarget ? evt.currentTarget : evt.target),evt,</xsl:text>
						<xsl:choose>
							<xsl:when test="@mode = 'synchronous'">true</xsl:when>
							<xsl:otherwise>false</xsl:otherwise>
						</xsl:choose>
						<xsl:text>,</xsl:text>
						<xsl:choose>
							<xsl:when test="@ev:propagate = 'stop'">false</xsl:when>
							<xsl:otherwise>true</xsl:otherwise>
						</xsl:choose>
						<xsl:text>);},</xsl:text>
						<xsl:choose>
							<xsl:when test="@ev:defaultAction = 'cancel' or @ev:alink = 'cancel'">false</xsl:when>
							<xsl:otherwise>true</xsl:otherwise>
						</xsl:choose>
						<xsl:text>);</xsl:text>
					</js>
				</xsl:if>
		</xsl:for-each>
	</xsl:template>
	</cm:source>
</cm:component>