<cm:component xmlns:cm="http://www.agencexml.com/cm" name="espaceEntities.xsl">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-10-30</cm:creationdate>
	<cm:lastupdate>2009-10-30s</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 agenceXML - Alain COUTHURES
Contact at : info@agencexml.com

Copyright (C) 2006 AJAXForms S.L.
Contact at: info@ajaxforms.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="application/xml">
		<xsl:template name="escapeJS" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
			<xsl:param name="text"/>
			<xsl:param name="trtext"/>
			<xsl:choose>
				<xsl:when test="function-available('msxsl:node-set') and contains($trtext, '&#9;')">
					<xsl:value-of select="substring-before($trtext, '&#9;')"/>
					<xsl:variable name="c" select="substring($text, string-length(substring-before($trtext, '&#9;'))+1, 1)"/>
					<xsl:choose>
						<xsl:when test="$c = $newline">\n</xsl:when>
						<xsl:when test="$c = $carriagereturn">\r</xsl:when>
						<xsl:when test="$c = '&#9;'">\t</xsl:when>
						<xsl:when test="$c = $quot">\"</xsl:when>
						<xsl:when test="$c = $apos">\'</xsl:when>
						<xsl:when test="$c = '\'">\\</xsl:when>
						<xsl:when test="$c = ' '">\x20</xsl:when>
					</xsl:choose>
					<xsl:call-template name="escapeJS">
						<xsl:with-param name="text" select="substring-after($text, $c)"/>
						<xsl:with-param name="trtext" select="substring-after($trtext, '&#9;')"/>
					</xsl:call-template>
				</xsl:when>
				<xsl:when test="not(function-available('msxsl:node-set')) and contains($trtext, $tab)">
					<xsl:value-of select="substring-before($trtext, $tab)"/>
					<xsl:variable name="c" select="substring($text, string-length(substring-before($trtext, $tab))+1, 1)"/>
					<xsl:choose>
						<xsl:when test="$c = $newline">\n</xsl:when>
						<xsl:when test="$c = $carriagereturn">\r</xsl:when>
						<xsl:when test="$c = $tab">\t</xsl:when>
						<xsl:when test="$c = $quot">\"</xsl:when>
						<xsl:when test="$c = $apos">\'</xsl:when>
						<xsl:when test="$c = '\'">\\</xsl:when>
						<xsl:when test="$c = ' '">\x20</xsl:when>
					</xsl:choose>
					<xsl:call-template name="escapeJS">
						<xsl:with-param name="text" select="substring-after($text, $c)"/>
						<xsl:with-param name="trtext" select="substring-after($trtext, $tab)"/>
					</xsl:call-template>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$text"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:template>
	</cm:source>
</cm:component>