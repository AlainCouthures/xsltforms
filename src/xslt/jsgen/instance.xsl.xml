<cm:component xmlns:cm="http://www.agencexml.com/cm" name="instance.xsl">
	<cm:author>Alain Couthures</cm:author>
	<cm:creationdate>2009-04-08</cm:creationdate>
	<cm:lastupdate>2009-04-08</cm:lastupdate>
	<cm:licence>
Copyright (C) 2008-2010 agenceXML - Alain COUTHURES
Contact at : info@agencexml.com

Copyright (C) 2006 AJAXForms S.L.
Contact at: info@ajaxforms.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
	</cm:licence>
	<cm:source type="application/xml">
		<xsl:template match="xforms:instance" mode="script" priority="1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xforms="http://www.w3.org/2002/xforms">
			<xsl:param name="parentworkid"/>
			<xsl:param name="workid" select="concat(position(),'_',$parentworkid)"/>
			<xsl:apply-templates select="@*" mode="scriptattr"/>
			<js xmlns="">
				<xsl:text>XsltForms_instance.create(</xsl:text>
				<xsl:value-of select="$vn_subform"/>
				<xsl:text>,</xsl:text>
				<xsl:choose>
					<xsl:when test="@id">"<xsl:value-of select="@id"/></xsl:when>
					<xsl:when test="not(preceding-sibling::xforms:instance) and string(parent::xforms:model/@id) = ''">"<xsl:value-of select="$id_pf"/>instance-default</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$jsid_pf"/>
						<xsl:text>instance-</xsl:text>
						<xsl:value-of select="$workid"/>
					</xsl:otherwise>
				</xsl:choose>
				<xsl:text>",</xsl:text>
				<xsl:variable name="lname" select="local-name(parent::*)"/>
				<xsl:value-of select="$vn_pf"/>
				<xsl:value-of select="$lname"/>
				<xsl:text>_</xsl:text>
				<xsl:value-of select="$parentworkid"/>
				<xsl:text>,</xsl:text>
				<xsl:choose>
					<xsl:when test="@readonly = 'true'">true</xsl:when>
					<xsl:otherwise>false</xsl:otherwise>
				</xsl:choose>
				<xsl:text>,</xsl:text>
				<xsl:choose>
					<xsl:when test="@mediatype">
						<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@mediatype"/></xsl:call-template>
					</xsl:when>
					<xsl:otherwise>"application/xml"</xsl:otherwise>
				</xsl:choose>
				<xsl:text>,</xsl:text>
				<xsl:choose>
					<xsl:when test="@src">
					<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@src"/></xsl:call-template>
					<xsl:text>,null);</xsl:text>
					</xsl:when>
					<xsl:when test="@resource and not(*)">
					<xsl:call-template name="toScriptParam"><xsl:with-param name="p" select="@resource"/></xsl:call-template>
					<xsl:text>,null);</xsl:text>
					</xsl:when>
					<xsl:otherwise>
						<xsl:text>null,</xsl:text>
						<xsl:choose>
							<xsl:when test="@mediatype and @mediatype != 'application/xml'">
								<xsl:text>"</xsl:text>
								<xsl:call-template name="escapeJS">
									<xsl:with-param name="text" select="."/>
									<xsl:with-param name="trtext" select="translate(.,concat(' ',$newline,$carriagereturn,'\&quot;'),concat($tab,$tab,$tab,$tab,$tab))"/>
								</xsl:call-template>
								<xsl:text>"</xsl:text>
							</xsl:when>
							<xsl:when test="$piform != '' and @id = $piforminstanceid">
								<xsl:text>'</xsl:text>
								<xsl:apply-templates select="$piforminstance/*" mode="xml2string">
									<xsl:with-param name="root" select="true()"/>
								</xsl:apply-templates>
								<xsl:text>'</xsl:text>
							</xsl:when>
							<xsl:otherwise>
								<xsl:text>'</xsl:text>
								<xsl:apply-templates select="node()" mode="xml2string">
									<xsl:with-param name="root" select="true()"/>
								</xsl:apply-templates>
								<xsl:text>'</xsl:text>
							</xsl:otherwise>
						</xsl:choose>
						<xsl:text>);</xsl:text>
					</xsl:otherwise>
				</xsl:choose>
			</js>
			<xsl:apply-templates select="node()" mode="script">
				<xsl:with-param name="parentworkid" select="$workid"/>
			</xsl:apply-templates>
			<xsl:call-template name="listeners">
				<xsl:with-param name="workid" select="$workid"/>
			</xsl:call-template>
		</xsl:template>
	</cm:source>
</cm:component>